##########################################################
#
# Filename:		make.base
# Author:		Eric Torstenson
# Purpose:		Provides basic make targets and behavior useful to track down and ease the process of building
#	

STRIP=strip

ifdef USE_DOPT
	FLAGS_DOPT=-D USE_DOPTIMIZATION
endif

ifdef ENABLE_CV
	FLAGS_CV=-D CROSS_VALIDATION
endif


ifndef OBJS
	OBJS=$(patsubst %,$(OBJECT_PATH)/%,$(notdir $(SRCS:.cpp=.o))) $(ADDITIONAL_OBJECTS)
endif 
#This didn't work perfectly, since some objects don't have matching .h files
#HDRS=$(SRCS:.cpp=.h)

CPPFLAGS= -Wall $(MODE_FLAG) $(INCLUDES) $(PREPROC_FLAG) $(COMPILER_FLAGS)
APPFLAGS=-L$(LIBPATH) $(TESTLINKS)
DEPEND= $(CPP) -MM 


VALGRIND_OPTIONS = -v --leak-check=full 

AR_FLAGS=-rsv
DEBUGLIB=$(BINPATH)/lib$(PROJECTNAME)$(DEBUGSUFFIX).a

include $(MAKEPATH)/make.directory

LIBNAME=lib$(PROJECTNAME)$(LIBSUFFIX).a
RLABLIBS=$(patsubst %,$(LIBPATH)/$(TESTPREFIX)lib%$(LIBSUFFIX).a, $(LOCAL_LIBS))

.PHONY:	clean debug all test tell release remake depend

STARTPATH=$(CURDIR)

all:	$(MAINTARGET)

release:
	@(SUPRESS)make remake RELEASE=1

remake:
	@(SUPRESS)rm -f $(OBJS) $(MAINTARGET)
	@(SUPRESS)make	


$(LIBPATH)/$(TESTPREFIX)$(LIBNAME): $(OBJS)
	$(SUPRESS)mkdir -p $(LIBPATH)
	$(SUPRESS)ar -rsv $@ $^

$(OBJS): $(SRCS) $(HDRS) .depend
	$(SUPRESS)mkdir -p $(OBJECT_PATH)
	$(SUPRESS)$(CPP) -c $(CPPFLAGS) $(filter %$(*F).cpp, $^) -o $(OBJECT_PATH)/$(*F)$(CMP_EXT)
	@echo $(OBJECT_PATH)/$(*F)$(CMP_EXT)

$(BINPATH)/$(TESTPREFIX)$(EXENAME):  $(OBJS) $(RLABLIBS)
	$(SUPRESS)mkdir -p $(BINPATH)
	$(SUPRESS)$(CPP) $(LINKER_FLAGS) $(CPPFLAGS) -o $@ $(OBJS) -L$(LIBPATH) $(RLABLIBS)
	$(SUPRESS)echo $@

depend : 
	$(SUPRESS) rm -f .depend
	$(SUPRESS) $(MAKE) .depend

tell:
	$(SUPRESS)echo ""
	$(SUPRESS)echo ""
	$(SUPRESS)echo "TARGET:"
	$(SUPRESS)echo "$(MAINTARGET)"
	$(SUPRESS)echo "SRCS: "
	$(SUPRESS)echo $(SRCS)
	$(SUPRESS)echo "OBJS:"
	$(SUPRESS)echo "$(OBJS)"
	$(SUPRESS)echo "LIBS:           $(RLABLIBS)"
	$(SUPRESS)echo "Compile Flags:"
	$(SUPRESS)echo $(CPPFLAGS)
	$(SUPRESS)echo "Link Flags:"
	$(SUPRESS)echo $(LINKER_FLAGS)

test: 
#$(BINPATH)/$(EXENAME)
	$(SUPRESS)$(MAKE) TEST=1

memtest: $(BINPATH)/test$(EXENAME)
	$(SUPRESS)cd $(BINPATH);	valgrind $(VALGRIND_OPTIONS) ./test$(EXENAME) > ./$(EXENAME).valgrind.output
	#> $(EXENAME).test.output
	$(SUPRESS)cd $(STARTPATH)

runtest: $(BINPATH)/$(EXENAME)
	$(SUPRESS)cd $(BINPATH);./$(EXENAME) > $(EXENAME).test.output
	#cd $(STARTPATH)

clean:
	$(SUPRESS)rm -f $(OBJS) $(MAINTARGET)
	$(SUPRESS)rm -f .depend

cleantmps:
	$(SUPRESS)rm -f .*.tmp

.depend: $(SRCS)
	$(SUPRESS)rm -f .depend
	$(SUPRESS)$(DEPEND) $(CPPFLAGS) $(SRCS)  >> .depend

include .depend
