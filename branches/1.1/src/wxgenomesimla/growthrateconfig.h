/////////////////////////////////////////////////////////////////////////////
// Name:        growthrateconfig.h
// Purpose:     
// Author:      Eric Torstenson
// Modified by: 
// Created:     Thu 29 Nov 2007 03:36:23 PM CST
// RCS-ID:      
// Copyright:   Copyright 2007 Ritchie Lab - See COPYING for License 
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (Personal Edition), Thu 29 Nov 2007 03:36:23 PM CST

#ifndef _GROWTHRATECONFIG_H_
#define _GROWTHRATECONFIG_H_

#if defined(__GNUG__) && !defined(__APPLE__)
#pragma interface "growthrateconfig.cpp"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/choicebk.h"
#include "wx/html/htmlwin.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
class wxChoicebook;
class wxHtmlWindow;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_DIALOG_GROWTH_RATE 10002
#define ID_NB_GROWTH_DEFINITION 10003
#define ID_GROWTH_LINEAR 10003
#define ID_TXT_LIN_INITPOP 10003
#define ID_TXT_LIN_GROWTH 10012
#define ID_TXT_LIN_VARIATION 10029
#define ID_GROWTH_EXPONENTIAL 10010
#define ID_TXT_EXP_INITPOP 10017
#define ID_TXT_EXP_GROWTH 10018
#define ID_TXT_EXP_VAR 10019
#define ID_GROWTH_LOGISTIC 10020
#define ID_TXT_LOG_INITPOP 10021
#define ID_TXT_LOG_GROWTH 10022
#define ID_TXT_LOG_VAR 10023
#define ID_TXT_LOG_CARCAP 10024
#define ID_GROWTH_RICHARD 10025
#define ID_TXT_RL_INITPOP 10000
#define ID_TXT_RL_GROWTH_RATE 10004
#define ID_TXT_RL_VAR 10005
#define ID_TXT_RL_CARCAP 10006
#define ID_TXT_RL_M 10007
#define ID_TXT_RL_POLARITY 10008
#define ID_HTML_GROWTH_REPORT 10001
#define ID_TXT_STARTING_GEN 10026
#define ID_TXT_FINAL_GEN 10027
#define ID_TXT_GROWTH_CHART_INTERVAL 10028
#define ID_TXT_MIN_POPSIZE 10013
#define ID_TXT_MAX_POPSIZE 10014
#define ID_TXT_FORCE_DROP_POINT 10015
#define SYMBOL_GROWTHCFG_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX
#define SYMBOL_GROWTHCFG_TITLE _("Configure Growth Rate")
#define SYMBOL_GROWTHCFG_IDNAME ID_DIALOG_GROWTH_RATE
#define SYMBOL_GROWTHCFG_SIZE wxSize(800, 600)
#define SYMBOL_GROWTHCFG_POSITION wxDefaultPosition
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif
#ifndef wxFIXED_MINSIZE
#define wxFIXED_MINSIZE 0
#endif

#include "populationcontroller.h"
#include "wxuser.h"

namespace GenomeSIM {
namespace GUI {

/*!
 * GrowthCfg class declaration
 */

class GrowthCfg: public wxDialog, public PopulationController, public WxUser
{    
    DECLARE_DYNAMIC_CLASS( GrowthCfg )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    GrowthCfg( );
    GrowthCfg( wxWindow* parent, wxWindowID id = SYMBOL_GROWTHCFG_IDNAME, const wxString& caption = SYMBOL_GROWTHCFG_TITLE, const wxPoint& pos = SYMBOL_GROWTHCFG_POSITION, const wxSize& size = SYMBOL_GROWTHCFG_SIZE, long style = SYMBOL_GROWTHCFG_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_GROWTHCFG_IDNAME, const wxString& caption = SYMBOL_GROWTHCFG_TITLE, const wxPoint& pos = SYMBOL_GROWTHCFG_POSITION, const wxSize& size = SYMBOL_GROWTHCFG_SIZE, long style = SYMBOL_GROWTHCFG_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin GrowthCfg event handler declarations

    /// wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED event handler for ID_NB_GROWTH_DEFINITION
    void OnNbGrowthDefinitionPageChanged( wxChoicebookEvent& event );

    /// wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING event handler for ID_NB_GROWTH_DEFINITION
    void OnNbGrowthDefinitionPageChanging( wxChoicebookEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_LIN_INITPOP
    void OnTxtLinInitpopUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_ENTER event handler for ID_TXT_LIN_INITPOP
    void OnTxtEnter( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_LIN_GROWTH
    void OnTxtLinGrowthUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_LIN_VARIATION
    void OnTxtLinVariationUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_EXP_INITPOP
    void OnTxtExpInitpopUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_EXP_GROWTH
    void OnTxtExpGrowthUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_EXP_VAR
    void OnTxtExpVarUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_LOG_INITPOP
    void OnTxtLogInitpopUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_LOG_GROWTH
    void OnTxtLogGrowthUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_LOG_VAR
    void OnTxtLogVarUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_LOG_CARCAP
    void OnTxtLogCarcapUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_RL_INITPOP
    void OnTxtRlInitpopUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_RL_GROWTH_RATE
    void OnTxtRlGrowthRateUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_RL_VAR
    void OnTxtRlVarUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_RL_CARCAP
    void OnTxtRlCarcapUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_RL_M
    void OnTxtRlMUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_RL_POLARITY
    void OnTxtRlPolarityUpdated( wxCommandEvent& event );

    /// wxEVT_UPDATE_UI event handler for ID_HTML_GROWTH_REPORT
    void OnHtmlGrowthReportUpdate( wxUpdateUIEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_STARTING_GEN
    void OnTxtStartingGenUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_FINAL_GEN
    void OnTxtFinalGenUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_GROWTH_CHART_INTERVAL
    void OnTxtGrowthChartIntervalUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_MIN_POPSIZE
    void OnTxtMinPopsizeUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_MAX_POPSIZE
    void OnTxtMaxPopsizeUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_TXT_FORCE_DROP_POINT
    void OnTxtForceDropPointUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for wxID_REFRESH
    void OnRefreshClick( wxCommandEvent& event );

////@end GrowthCfg event handler declarations

////@begin GrowthCfg member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end GrowthCfg member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin GrowthCfg member variables
    wxChoicebook* nbGrowthDefinition;
    wxTextCtrl* txtLinInitPop;
    wxTextCtrl* txtLinGrowthRate;
    wxTextCtrl* txtLinVariation;
    wxTextCtrl* txtExpInitPop;
    wxTextCtrl* txtExpGrowthRate;
    wxTextCtrl* txtExpVariation;
    wxTextCtrl* txtLogInitPop;
    wxTextCtrl* txtLogGrowthRate;
    wxTextCtrl* txtLogVariation;
    wxTextCtrl* txtLogCarryCap;
    wxTextCtrl* txtRLInitPop;
    wxTextCtrl* txtRLGrowth;
    wxTextCtrl* txtRLVariance;
    wxTextCtrl* txtRLCarryCap;
    wxTextCtrl* txtRLMaxGrowth;
    wxTextCtrl* txtRLPolarity;
    wxHtmlWindow* htmlGrowthReport;
    wxTextCtrl* txtGrowthRateStartingGen;
    wxTextCtrl* txtGrowthChartFinalGen;
    wxTextCtrl* txtGrowthChartInterval;
    wxTextCtrl* txtMinPopSize;
    wxTextCtrl* txtMaxPopSize;
////@end GrowthCfg member variables
	wxTextCtrl *txtForceDropPoint;

	void OnTxtUpdate( wxCommandEvent& event);
	void Init();

	string GetGrowthConfiguration();

	void OnOkClick(wxCommandEvent& event);
protected:
	void RefreshControls(GrowthRateType control);


	bool refreshImage;
	
};

}
}


#endif
    // _GROWTHRATECONFIG_H_
